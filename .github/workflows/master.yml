name: master
"on":
  push:
    branches:
      - master
      - "feature-**"
    paths-ignore:
      - CHANGELOG.md
    tags-ignore:
      - v*
      - sdk/*
      - '**'
env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
  NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
  NUGET_PUBLISH_KEY: ${{ secrets.NUGET_PUBLISH_KEY }}
  PROVIDER: homelab
  PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
  PYPI_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
jobs:
  build_sdks:
    name: build_sdks
    runs-on: ubuntu-latest
    needs: prerequisites
    strategy:
      fail-fast: true
      matrix:
        dotnetversion: [ 3.1.301 ]
        goversion: [ 1.16.x ]
        language: [ nodejs, python, dotnet, go ]
        nodeversion: [ 14.x ]
        pythonversion: [ 3.7 ]
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
      - name: Unshallow clone for tags
        run: git fetch --prune --unshallow --tags
        if: ${{ !env.ACT }}
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.goversion }}
      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: ${{matrix.nodeversion}}
          registry-url: https://registry.npmjs.org
      - name: Setup DotNet
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{matrix.dotnetversion}}
      - name: Setup Python
        uses: actions/setup-python@v1
        with:
          python-version: ${{matrix.pythonversion}}
      - name: Install pulumictl
        uses: jaxxstorm/action-install-gh-release@v1.1.0
        with:
          repo: pulumi/pulumictl
      - name: Install Pulumi CLI
        uses: pulumi/setup-pulumi@v2
      - name: Download provider + tfgen binaries
        uses: actions/download-artifact@v2
        with:
          name: pulumi-${{ env.PROVIDER }}
          path: ${{ github.workspace }}/bin
      - name: Restore binary perms
        run: find ${{ github.workspace }} -name "pulumi-*-${{ env.PROVIDER }}" -print
          -exec chmod +x {} \;
      - name: Generate SDK
        run: make build_${{ matrix.language }}_sdk
      # TODO: Maybe check working tree is clean like Pulumi does
      - run: git status --porcelain
      - name: Compress SDK folder
        run: tar -zcf sdk/${{ matrix.language }}.tar.gz -C sdk/${{ matrix.language }} .
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.language  }}-sdk.tar.gz
          path: ${{ github.workspace}}/sdk/${{ matrix.language }}.tar.gz
  prerequisites:
    name: prerequisites
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goversion: [1.16.x]
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
        with:
          lfs: true
      - name: Unshallow clone for tags
        run: git fetch --prune --unshallow --tags
        if: ${{ !env.ACT }}
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.goversion }}
      - name: Install pulumictl
        uses: jaxxstorm/action-install-gh-release@v1.1.0
        with:
          repo: pulumi/pulumictl
      - name: Install Pulumi CLI
        uses: pulumi/setup-pulumi@v2
      - name: Build provider binary
        run: make build_provider
      # TODO: Maybe check working tree is clean like Pulumi does
      - run: git status --porcelain
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: pulumi-${{ env.PROVIDER }}
          path: ${{ github.workspace }}/bin
      # - name: Test Provider Library
      #   run: make test_provider
  test:
    name: ${{ matrix.language }} Tests
    needs: build_sdks
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        dotnetversion: [3.1.301]
        goversion: [1.16.x]
        language: [nodejs, python, dotnet, go]
        nodeversion: [14.x]
        pythonversion: [3.7]
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
      - name: Unshallow clone for tags
        run: git fetch --prune --unshallow --tags
        if: ${{ !env.ACT }}
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.goversion }}
      - name: Install pulumictl
        uses: jaxxstorm/action-install-gh-release@v1.1.0
        with:
          repo: pulumi/pulumictl
      - name: Install Pulumi CLI
        uses: pulumi/setup-pulumi@v2
      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: ${{matrix.nodeversion}}
          registry-url: https://registry.npmjs.org
      - name: Setup DotNet
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{matrix.dotnetversion}}
      - name: Setup Python
        uses: actions/setup-python@v1
        with:
          python-version: ${{matrix.pythonversion}}
      - name: Download binaries
        uses: actions/download-artifact@v2
        with:
          name: pulumi-${{ env.PROVIDER }}
          path: ${{ github.workspace }}/bin
      - name: Restore binary perms
        run: find ${{ github.workspace }} -name "pulumi-*-${{ env.PROVIDER }}" -print
          -exec chmod +x {} \;
      - name: Download SDK
        uses: actions/download-artifact@v2
        with:
          name: ${{ matrix.language  }}-sdk.tar.gz
          path: ${{ github.workspace}}/sdk
      - name: Uncompress SDK folder
        run: tar -zxf ${{ github.workspace}}/sdk/${{ matrix.language}}.tar.gz -C ${{ github.workspace}}/sdk/${{ matrix.language}}
      - name: Update path
        run: echo "${{ github.workspace }}/bin" >> $GITHUB_PATH
      - name: Install Node deps
        run:  yarn global add typescript
      - run: dotnet nuget add source ${{ github.workspace }}/nuget
      - name: Install Python deps
        run: |-
          pip3 install virtualenv==20.0.23
          pip3 install pipenv
      - name: Install dependencies
        run: make install_${{ matrix.language}}_sdk
      - name: Set up gotestfmt
        uses: haveyoudebuggedit/gotestfmt-action@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Run tests
        run: |
          set -euo pipefail
          cd examples && go test -json  -v -count=1 -cover -timeout 2h -tags=${{ matrix.language
          }} -parallel 4 . 2>&1 | tee /tmp/gotest.log | gotestfmt
  publish:
    name: publish
    needs: test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goversion: [ 1.16.x ]
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
      - name: Unshallow clone for tags
        run: git fetch --prune --unshallow --tags
        if: ${{ !env.ACT }}
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.goversion }}
      - name: Install pulumictl
        uses: jaxxstorm/action-install-gh-release@v1.1.0
        with:
          repo: pulumi/pulumictl
      - name: Install Pulumi CLI
        uses: pulumi/setup-pulumi@v2
      - name: Set PreRelease Version
        run: echo "GORELEASER_CURRENT_TAG=v$(pulumictl get version --language generic)" >> $GITHUB_ENV
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v2
        with:
          args: -p 1 -f .goreleaser.prerelease.yml --rm-dist --skip-validate --timeout 60m0s
          version: latest
  publish_sdk:
    name: publish_sdk
    needs: publish
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goversion: [ 1.16.x ]
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
      - name: Unshallow clone for tags
        run: git fetch --prune --unshallow --tags
        if: ${{ !env.ACT }}
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.goversion }}
      - name: Install pulumictl
        uses: jaxxstorm/action-install-gh-release@v1.1.0
        with:
          repo: pulumi/pulumictl
      - name: Install Pulumi CLI
        uses: pulumi/setup-pulumi@v2
      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          always-auth: true
          registry-url: https://registry.npmjs.org
      - name: Setup DotNet
        uses: actions/setup-dotnet@v1
      - name: Setup Python
        uses: actions/setup-python@v1
      - name: Download Python SDK
        uses: actions/download-artifact@v2
        with:
          name: python-sdk.tar.gz
          path: ${{ github.workspace}}/sdk
      - name: Unzip Python SDK
        run: tar -zxf ${{ github.workspace}}/sdk/python.tar.gz -C ${{ github.workspace}}/sdk/python
      - name: Install Twine
        run: python -m pip install pip twine
      - name: Download NodeJS SDK
        uses: actions/download-artifact@v2
        with:
          name: nodejs-sdk.tar.gz
          path: ${{ github.workspace}}/sdk
      - name: Unzip NodeJS SDK
        run: tar -zxf ${{ github.workspace}}/sdk/nodejs.tar.gz -C ${{ github.workspace}}/sdk/nodejs
      - name: Download DotNet SDK
        uses: actions/download-artifact@v2
        with:
          name: dotnet-sdk.tar.gz
          path: ${{ github.workspace}}/sdk
      - name: Unzip DotNet SDK
        run: tar -zxf ${{ github.workspace}}/sdk/dotnet.tar.gz -C ${{ github.workspace}}/sdk/dotnet
      # - env:
      #     NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      #   name: Publish SDKs
      #   run: ./ci-scripts/ci/publish-tfgen-package ${{ github.workspace }}
