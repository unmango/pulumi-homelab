// *** WARNING: this file was generated by Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.ComponentModel;
using Pulumi;

namespace Pulumi.Homelab
{
    [EnumType]
    public readonly struct KubernetesDeploymentStrategyType : IEquatable<KubernetesDeploymentStrategyType>
    {
        private readonly string _value;

        private KubernetesDeploymentStrategyType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static KubernetesDeploymentStrategyType Recreate { get; } = new KubernetesDeploymentStrategyType("Recreate");
        public static KubernetesDeploymentStrategyType Rolling { get; } = new KubernetesDeploymentStrategyType("Rolling");

        public static bool operator ==(KubernetesDeploymentStrategyType left, KubernetesDeploymentStrategyType right) => left.Equals(right);
        public static bool operator !=(KubernetesDeploymentStrategyType left, KubernetesDeploymentStrategyType right) => !left.Equals(right);

        public static explicit operator string(KubernetesDeploymentStrategyType value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is KubernetesDeploymentStrategyType other && Equals(other);
        public bool Equals(KubernetesDeploymentStrategyType other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    [EnumType]
    public readonly struct KubernetesServiceType : IEquatable<KubernetesServiceType>
    {
        private readonly string _value;

        private KubernetesServiceType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static KubernetesServiceType ClusterIP { get; } = new KubernetesServiceType("ClusterIP");
        public static KubernetesServiceType LoadBalancer { get; } = new KubernetesServiceType("LoadBalancer");

        public static bool operator ==(KubernetesServiceType left, KubernetesServiceType right) => left.Equals(right);
        public static bool operator !=(KubernetesServiceType left, KubernetesServiceType right) => !left.Equals(right);

        public static explicit operator string(KubernetesServiceType value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is KubernetesServiceType other && Equals(other);
        public bool Equals(KubernetesServiceType other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }
}
