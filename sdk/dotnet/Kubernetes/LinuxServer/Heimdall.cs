// *** WARNING: this file was generated by Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace UnMango.Homelab.Kubernetes.LinuxServer
{
    /// <summary>
    /// Heimdall is a way to organise all those links to your most
    /// used web sites and web applications in a simple way.
    /// https://github.com/linuxserver/docker-heimdall
    /// </summary>
    [HomelabResourceType("homelab:kubernetes/linuxserver:Heimdall")]
    public partial class Heimdall : Pulumi.ComponentResource
    {
        /// <summary>
        /// Heimdall service object.
        /// </summary>
        [Output("service")]
        public Output<Pulumi.Kubernetes.Core.V1.Service> Service { get; private set; } = null!;

        /// <summary>
        /// Heimdall stateful set object.
        /// </summary>
        [Output("statefulSet")]
        public Output<Pulumi.Kubernetes.Apps.V1.StatefulSet> StatefulSet { get; private set; } = null!;


        /// <summary>
        /// Create a Heimdall resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Heimdall(string name, HeimdallArgs? args = null, ComponentResourceOptions? options = null)
            : base("homelab:kubernetes/linuxserver:Heimdall", name, args ?? new HeimdallArgs(), MakeResourceOptions(options, ""), remote: true)
        {
        }

        private static ComponentResourceOptions MakeResourceOptions(ComponentResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new ComponentResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "https://github.com/unmango/pulumi-homelab/releases/download/${VERSION}",
            };
            var merged = ComponentResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
    }

    public sealed class HeimdallArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The namespace to put resources in.
        /// </summary>
        [Input("namespace")]
        public Input<string>? Namespace { get; set; }

        /// <summary>
        /// Heidmall persistence options.
        /// </summary>
        [Input("persistence")]
        public Input<Inputs.HeimdallPersistenceArgs>? Persistence { get; set; }

        /// <summary>
        /// The user id to run the container as.
        /// See https://github.com/linuxserver/docker-heimdall#user--group-identifiers
        /// </summary>
        [Input("pgid")]
        public Input<string>? Pgid { get; set; }

        /// <summary>
        /// The group id to run the container as.
        /// See https://github.com/linuxserver/docker-heimdall#user--group-identifiers
        /// </summary>
        [Input("puid")]
        public Input<string>? Puid { get; set; }

        /// <summary>
        /// Arguments for the kubernetes service.
        /// </summary>
        [Input("service")]
        public Input<Inputs.HeimdallServiceArgs>? Service { get; set; }

        /// <summary>
        /// The timezone to use.
        /// </summary>
        [Input("tz")]
        public Input<string>? Tz { get; set; }

        public HeimdallArgs()
        {
        }
    }
}
