// *** WARNING: this file was generated by Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package k8s

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type Deployment struct {
	// Deployment strategy to use.
	Strategy *DeploymentStrategy `pulumi:"strategy"`
}

// Defaults sets the appropriate defaults for Deployment
func (val *Deployment) Defaults() *Deployment {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Strategy = tmp.Strategy.Defaults()

	return &tmp
}

// DeploymentInput is an input type that accepts DeploymentArgs and DeploymentOutput values.
// You can construct a concrete instance of `DeploymentInput` via:
//
//          DeploymentArgs{...}
type DeploymentInput interface {
	pulumi.Input

	ToDeploymentOutput() DeploymentOutput
	ToDeploymentOutputWithContext(context.Context) DeploymentOutput
}

type DeploymentArgs struct {
	// Deployment strategy to use.
	Strategy DeploymentStrategyPtrInput `pulumi:"strategy"`
}

func (DeploymentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Deployment)(nil)).Elem()
}

func (i DeploymentArgs) ToDeploymentOutput() DeploymentOutput {
	return i.ToDeploymentOutputWithContext(context.Background())
}

func (i DeploymentArgs) ToDeploymentOutputWithContext(ctx context.Context) DeploymentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentOutput)
}

func (i DeploymentArgs) ToDeploymentPtrOutput() DeploymentPtrOutput {
	return i.ToDeploymentPtrOutputWithContext(context.Background())
}

func (i DeploymentArgs) ToDeploymentPtrOutputWithContext(ctx context.Context) DeploymentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentOutput).ToDeploymentPtrOutputWithContext(ctx)
}

// DeploymentPtrInput is an input type that accepts DeploymentArgs, DeploymentPtr and DeploymentPtrOutput values.
// You can construct a concrete instance of `DeploymentPtrInput` via:
//
//          DeploymentArgs{...}
//
//  or:
//
//          nil
type DeploymentPtrInput interface {
	pulumi.Input

	ToDeploymentPtrOutput() DeploymentPtrOutput
	ToDeploymentPtrOutputWithContext(context.Context) DeploymentPtrOutput
}

type deploymentPtrType DeploymentArgs

func DeploymentPtr(v *DeploymentArgs) DeploymentPtrInput {
	return (*deploymentPtrType)(v)
}

func (*deploymentPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Deployment)(nil)).Elem()
}

func (i *deploymentPtrType) ToDeploymentPtrOutput() DeploymentPtrOutput {
	return i.ToDeploymentPtrOutputWithContext(context.Background())
}

func (i *deploymentPtrType) ToDeploymentPtrOutputWithContext(ctx context.Context) DeploymentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentPtrOutput)
}

type DeploymentOutput struct{ *pulumi.OutputState }

func (DeploymentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Deployment)(nil)).Elem()
}

func (o DeploymentOutput) ToDeploymentOutput() DeploymentOutput {
	return o
}

func (o DeploymentOutput) ToDeploymentOutputWithContext(ctx context.Context) DeploymentOutput {
	return o
}

func (o DeploymentOutput) ToDeploymentPtrOutput() DeploymentPtrOutput {
	return o.ToDeploymentPtrOutputWithContext(context.Background())
}

func (o DeploymentOutput) ToDeploymentPtrOutputWithContext(ctx context.Context) DeploymentPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Deployment) *Deployment {
		return &v
	}).(DeploymentPtrOutput)
}

// Deployment strategy to use.
func (o DeploymentOutput) Strategy() DeploymentStrategyPtrOutput {
	return o.ApplyT(func(v Deployment) *DeploymentStrategy { return v.Strategy }).(DeploymentStrategyPtrOutput)
}

type DeploymentPtrOutput struct{ *pulumi.OutputState }

func (DeploymentPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Deployment)(nil)).Elem()
}

func (o DeploymentPtrOutput) ToDeploymentPtrOutput() DeploymentPtrOutput {
	return o
}

func (o DeploymentPtrOutput) ToDeploymentPtrOutputWithContext(ctx context.Context) DeploymentPtrOutput {
	return o
}

func (o DeploymentPtrOutput) Elem() DeploymentOutput {
	return o.ApplyT(func(v *Deployment) Deployment {
		if v != nil {
			return *v
		}
		var ret Deployment
		return ret
	}).(DeploymentOutput)
}

// Deployment strategy to use.
func (o DeploymentPtrOutput) Strategy() DeploymentStrategyPtrOutput {
	return o.ApplyT(func(v *Deployment) *DeploymentStrategy {
		if v == nil {
			return nil
		}
		return v.Strategy
	}).(DeploymentStrategyPtrOutput)
}

type DeploymentStrategy struct {
	// Type of deployment strategy.
	Type *DeploymentStrategyType `pulumi:"type"`
}

// Defaults sets the appropriate defaults for DeploymentStrategy
func (val *DeploymentStrategy) Defaults() *DeploymentStrategy {
	if val == nil {
		return nil
	}
	tmp := *val
	if isZero(tmp.Type) {
		type_ := DeploymentStrategyType("Recreate")
		tmp.Type = &type_
	}
	return &tmp
}

// DeploymentStrategyInput is an input type that accepts DeploymentStrategyArgs and DeploymentStrategyOutput values.
// You can construct a concrete instance of `DeploymentStrategyInput` via:
//
//          DeploymentStrategyArgs{...}
type DeploymentStrategyInput interface {
	pulumi.Input

	ToDeploymentStrategyOutput() DeploymentStrategyOutput
	ToDeploymentStrategyOutputWithContext(context.Context) DeploymentStrategyOutput
}

type DeploymentStrategyArgs struct {
	// Type of deployment strategy.
	Type DeploymentStrategyTypePtrInput `pulumi:"type"`
}

func (DeploymentStrategyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentStrategy)(nil)).Elem()
}

func (i DeploymentStrategyArgs) ToDeploymentStrategyOutput() DeploymentStrategyOutput {
	return i.ToDeploymentStrategyOutputWithContext(context.Background())
}

func (i DeploymentStrategyArgs) ToDeploymentStrategyOutputWithContext(ctx context.Context) DeploymentStrategyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentStrategyOutput)
}

func (i DeploymentStrategyArgs) ToDeploymentStrategyPtrOutput() DeploymentStrategyPtrOutput {
	return i.ToDeploymentStrategyPtrOutputWithContext(context.Background())
}

func (i DeploymentStrategyArgs) ToDeploymentStrategyPtrOutputWithContext(ctx context.Context) DeploymentStrategyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentStrategyOutput).ToDeploymentStrategyPtrOutputWithContext(ctx)
}

// DeploymentStrategyPtrInput is an input type that accepts DeploymentStrategyArgs, DeploymentStrategyPtr and DeploymentStrategyPtrOutput values.
// You can construct a concrete instance of `DeploymentStrategyPtrInput` via:
//
//          DeploymentStrategyArgs{...}
//
//  or:
//
//          nil
type DeploymentStrategyPtrInput interface {
	pulumi.Input

	ToDeploymentStrategyPtrOutput() DeploymentStrategyPtrOutput
	ToDeploymentStrategyPtrOutputWithContext(context.Context) DeploymentStrategyPtrOutput
}

type deploymentStrategyPtrType DeploymentStrategyArgs

func DeploymentStrategyPtr(v *DeploymentStrategyArgs) DeploymentStrategyPtrInput {
	return (*deploymentStrategyPtrType)(v)
}

func (*deploymentStrategyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentStrategy)(nil)).Elem()
}

func (i *deploymentStrategyPtrType) ToDeploymentStrategyPtrOutput() DeploymentStrategyPtrOutput {
	return i.ToDeploymentStrategyPtrOutputWithContext(context.Background())
}

func (i *deploymentStrategyPtrType) ToDeploymentStrategyPtrOutputWithContext(ctx context.Context) DeploymentStrategyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentStrategyPtrOutput)
}

type DeploymentStrategyOutput struct{ *pulumi.OutputState }

func (DeploymentStrategyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentStrategy)(nil)).Elem()
}

func (o DeploymentStrategyOutput) ToDeploymentStrategyOutput() DeploymentStrategyOutput {
	return o
}

func (o DeploymentStrategyOutput) ToDeploymentStrategyOutputWithContext(ctx context.Context) DeploymentStrategyOutput {
	return o
}

func (o DeploymentStrategyOutput) ToDeploymentStrategyPtrOutput() DeploymentStrategyPtrOutput {
	return o.ToDeploymentStrategyPtrOutputWithContext(context.Background())
}

func (o DeploymentStrategyOutput) ToDeploymentStrategyPtrOutputWithContext(ctx context.Context) DeploymentStrategyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DeploymentStrategy) *DeploymentStrategy {
		return &v
	}).(DeploymentStrategyPtrOutput)
}

// Type of deployment strategy.
func (o DeploymentStrategyOutput) Type() DeploymentStrategyTypePtrOutput {
	return o.ApplyT(func(v DeploymentStrategy) *DeploymentStrategyType { return v.Type }).(DeploymentStrategyTypePtrOutput)
}

type DeploymentStrategyPtrOutput struct{ *pulumi.OutputState }

func (DeploymentStrategyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentStrategy)(nil)).Elem()
}

func (o DeploymentStrategyPtrOutput) ToDeploymentStrategyPtrOutput() DeploymentStrategyPtrOutput {
	return o
}

func (o DeploymentStrategyPtrOutput) ToDeploymentStrategyPtrOutputWithContext(ctx context.Context) DeploymentStrategyPtrOutput {
	return o
}

func (o DeploymentStrategyPtrOutput) Elem() DeploymentStrategyOutput {
	return o.ApplyT(func(v *DeploymentStrategy) DeploymentStrategy {
		if v != nil {
			return *v
		}
		var ret DeploymentStrategy
		return ret
	}).(DeploymentStrategyOutput)
}

// Type of deployment strategy.
func (o DeploymentStrategyPtrOutput) Type() DeploymentStrategyTypePtrOutput {
	return o.ApplyT(func(v *DeploymentStrategy) *DeploymentStrategyType {
		if v == nil {
			return nil
		}
		return v.Type
	}).(DeploymentStrategyTypePtrOutput)
}

type ImageArgs struct {
	// Registry to use for the image. e.g. 'lcsr.io'
	Registry *string `pulumi:"registry"`
	// Repository to use for the image. e.g. 'linuxserver'
	Repository *string `pulumi:"repository"`
	// Tag to use for the image. e.g. 'latest'
	Tag *string `pulumi:"tag"`
}

type Service struct {
	// Optional service name.
	Name *string `pulumi:"name"`
	// Type of service to deploy.
	Type ServiceType `pulumi:"type"`
}

// ServiceInput is an input type that accepts ServiceArgs and ServiceOutput values.
// You can construct a concrete instance of `ServiceInput` via:
//
//          ServiceArgs{...}
type ServiceInput interface {
	pulumi.Input

	ToServiceOutput() ServiceOutput
	ToServiceOutputWithContext(context.Context) ServiceOutput
}

type ServiceArgs struct {
	// Optional service name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Type of service to deploy.
	Type ServiceTypeInput `pulumi:"type"`
}

func (ServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Service)(nil)).Elem()
}

func (i ServiceArgs) ToServiceOutput() ServiceOutput {
	return i.ToServiceOutputWithContext(context.Background())
}

func (i ServiceArgs) ToServiceOutputWithContext(ctx context.Context) ServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceOutput)
}

func (i ServiceArgs) ToServicePtrOutput() ServicePtrOutput {
	return i.ToServicePtrOutputWithContext(context.Background())
}

func (i ServiceArgs) ToServicePtrOutputWithContext(ctx context.Context) ServicePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceOutput).ToServicePtrOutputWithContext(ctx)
}

// ServicePtrInput is an input type that accepts ServiceArgs, ServicePtr and ServicePtrOutput values.
// You can construct a concrete instance of `ServicePtrInput` via:
//
//          ServiceArgs{...}
//
//  or:
//
//          nil
type ServicePtrInput interface {
	pulumi.Input

	ToServicePtrOutput() ServicePtrOutput
	ToServicePtrOutputWithContext(context.Context) ServicePtrOutput
}

type servicePtrType ServiceArgs

func ServicePtr(v *ServiceArgs) ServicePtrInput {
	return (*servicePtrType)(v)
}

func (*servicePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Service)(nil)).Elem()
}

func (i *servicePtrType) ToServicePtrOutput() ServicePtrOutput {
	return i.ToServicePtrOutputWithContext(context.Background())
}

func (i *servicePtrType) ToServicePtrOutputWithContext(ctx context.Context) ServicePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServicePtrOutput)
}

type ServiceOutput struct{ *pulumi.OutputState }

func (ServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Service)(nil)).Elem()
}

func (o ServiceOutput) ToServiceOutput() ServiceOutput {
	return o
}

func (o ServiceOutput) ToServiceOutputWithContext(ctx context.Context) ServiceOutput {
	return o
}

func (o ServiceOutput) ToServicePtrOutput() ServicePtrOutput {
	return o.ToServicePtrOutputWithContext(context.Background())
}

func (o ServiceOutput) ToServicePtrOutputWithContext(ctx context.Context) ServicePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Service) *Service {
		return &v
	}).(ServicePtrOutput)
}

// Optional service name.
func (o ServiceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Service) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Type of service to deploy.
func (o ServiceOutput) Type() ServiceTypeOutput {
	return o.ApplyT(func(v Service) ServiceType { return v.Type }).(ServiceTypeOutput)
}

type ServicePtrOutput struct{ *pulumi.OutputState }

func (ServicePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Service)(nil)).Elem()
}

func (o ServicePtrOutput) ToServicePtrOutput() ServicePtrOutput {
	return o
}

func (o ServicePtrOutput) ToServicePtrOutputWithContext(ctx context.Context) ServicePtrOutput {
	return o
}

func (o ServicePtrOutput) Elem() ServiceOutput {
	return o.ApplyT(func(v *Service) Service {
		if v != nil {
			return *v
		}
		var ret Service
		return ret
	}).(ServiceOutput)
}

// Optional service name.
func (o ServicePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Service) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Type of service to deploy.
func (o ServicePtrOutput) Type() ServiceTypePtrOutput {
	return o.ApplyT(func(v *Service) *ServiceType {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(ServiceTypePtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentInput)(nil)).Elem(), DeploymentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentPtrInput)(nil)).Elem(), DeploymentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentStrategyInput)(nil)).Elem(), DeploymentStrategyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentStrategyPtrInput)(nil)).Elem(), DeploymentStrategyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceInput)(nil)).Elem(), ServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServicePtrInput)(nil)).Elem(), ServiceArgs{})
	pulumi.RegisterOutputType(DeploymentOutput{})
	pulumi.RegisterOutputType(DeploymentPtrOutput{})
	pulumi.RegisterOutputType(DeploymentStrategyOutput{})
	pulumi.RegisterOutputType(DeploymentStrategyPtrOutput{})
	pulumi.RegisterOutputType(ServiceOutput{})
	pulumi.RegisterOutputType(ServicePtrOutput{})
}
