// *** WARNING: this file was generated by Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "./types";
import * as utilities from "./utilities";

export class Radarr extends pulumi.ComponentResource {
    /** @internal */
    public static readonly __pulumiType = 'homelab:index/kubernetes/linuxserver:Radarr';

    /**
     * Returns true if the given object is an instance of Radarr.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Radarr {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Radarr.__pulumiType;
    }


    /**
     * Create a Radarr resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: RadarrArgs, opts?: pulumi.ComponentResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            inputs["deployment"] = args ? args.deployment : undefined;
            inputs["image"] = args ? args.image : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["namespace"] = args ? args.namespace : undefined;
            inputs["service"] = args ? args.service : undefined;
        } else {
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(Radarr.__pulumiType, name, inputs, opts, true /*remote*/);
    }
}

/**
 * The set of arguments for constructing a Radarr resource.
 */
export interface RadarrArgs {
    readonly deployment?: pulumi.Input<inputs.DeploymentArgs>;
    readonly image?: pulumi.Input<string | inputs.ImageArgsArgs>;
    /**
     * Optional name override.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * Namespace to provision resources in.
     */
    readonly namespace?: pulumi.Input<string>;
    readonly service?: pulumi.Input<inputs.ServiceArgs>;
}
